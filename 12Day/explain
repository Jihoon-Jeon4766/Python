판다스(pandas)
데이터를 정확하게 분석할 수 있도록 여러 자료형(정수, 실수, 문자 등)의 데이터를 생성, 추가, 삭제, 변환 등을 수행하는 라이브러리 [pandas]

판다스(pandas)데이터 구조
시리즈(1차원 배열)

데이터 프레임(2차원 배열)
넘파이에 행렬 형태, 인덱스랑 컬럼을 사용해서 데이터를 저장

설치(terminal)
pip3 install Pandas

호출
import pandas as pd

시리즈 생성
Series()
판다스 객체.Series(리스트 or 딕셔너리)

Series(리스트)
판다스 객체.Series([데이터0,...,데이터 라스트n],[index 0,...,인덱스 라스트n])

Series(딕셔너리)
판다스 객체.Series(딕셔너리)

인덱스 / 데이터 가져오기
Series()
시리즈 객체.index
시리즈 객체.values

shape -> 시리즈의 형태 반환
len() -> 시리즈의 길이 반환
size -> 시리즈 원소의 총 개수 반환
count() -> NaN 제외 실제 값이 있는 원소의 수 반환
unique() -> 중복 없이 유일한 값들을 넘파이 배열로 반환(순서 보장 안 됨)
value_counts() -> 각 값이 몇 번 나왔는지 Series 형태로 반환(내림차순 정렬)
mean() -> 평균값 계산 (NaN은 제외됨)
head() -> 앞의 5개 값 반환(기본 값이 5개)
tail() -> 뒤의 5개 반환(기본값이 5개)

시리즈 데이터 연산
연산 조건
1. 시리즈와 시리즈 간의 연산에서는 인덱스가 일치하는 것 끼리 연산을 하며, 인덱스가 일치하지 않을 떼는 결과로 'NaN(빈값,null)'을 출력
2. 시리즈에서도 시리즈 간 연산관 스칼라와 시리즈의 연산을 넘파이처럼 각 데이터별로 연산

배열
판다스 객체.DataFrame(2차원 배열, index = 인덱스 배열, columns = 칼람 배열)

시리즈
판다스 객체.DataFrame([시리즈 리스트],[index 0,...,인덱스 리스트n])

딕셔너리
판다스 객체.DataFrame([딕셔너리,[index 0,..., 인덱스 리스트n])

하나의 컬럼 가져오기
데이터 접근
데이터프레임['컬럼명']

여러 개의 컬럼 가져오기
데이터 접근
데이터 프레임[['컬럼명1','컬럼명2']]

인덱스(행)가져오기
데이터 접근
loc[]
인덱스명으로 행 접근
iloc[]
0부터 시작하는 정수형 인덱스로 행 접근
