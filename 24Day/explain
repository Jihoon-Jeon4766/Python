Sigmoid
음수는 0으로 양수는 1로 출력

Tanh(Hyperbolic Tangent)
음수는 -1로 출력, 양수는 1로 출력

ReLU(Rectified Linear Unit)
음수는 0으로 출력, 양수는 해당 값으로 출력

softmax
여러 입력을 0~1 사이 확률로 변환하며, 전체 합은 1이 되도록 출력

5. 모델 컴파일 하기
5-1. 컴파일 처리
complie(loss = '손실함수명', optimizer='최적화 함수명', metrics = ['평가지표']

손실 함수
딥러닝의 예측값과 실제값 사이의 차이를 수치로 나타내는 함수
sparse_categorical crossentropy

최적화 함수
손실 함수의 값을 최소화하도록 가중치와 바이어스를 수정해 나가는 함수
adam

평가 지표
분류 모델이 얼마나 잘 분류했는지를 평가하는 지표
accuracy
정확도
Accuracy = TP/TN

6. 모델 학습하기
6-1. 모델 학습
fit(훈련 데이터, 훈련 데이터의 레이블, epochs=반복학습횟수)

7. 모델 평가 및 예측하기
7-1. 모델 평가
evaluate(테스트 데이터, 테스트 데이터의 레이블)

1. 문제 정의하기
1-1. 문제 상황 이해하기
다이아몬드 가격 예측

1-2. 문제 해결에 필요한 정보 살펴보기
필요정보 1
활동에 필요한 데이터셋은 다이아몬드 데이터 셋이며, 시본(seaborn)에서 다운로드

필요정보2
다이아몬드 데이터 셋은 학습에서 사용하기 위해 정규화 작업과 전처리 작업이 필요함

필요정보3
모델 생성에 필요한 활성함수는 렐루함수를 사용

4. 모델 생성하기
4-1. 모델 생성 방법(방법2)
모델 객체 = keras.models.Sequential()
모델 객체.add(keras.layers.Dense(은닉층 노드의 개수, activation = '활성화 함수명', input_shape = (입력층 행의 개수,)))
모델 객체.add(keras.layers.Dense(은닉층 노드의 개수, activation = '활성화 함수명', input_shape = (입력층 행의 개수,)))
....
모델 객체.add(keras.layers.Dense(은닉층 노드의 개수, activation = '활성화 함수명', input_shape = (입력층 행의 개수,)))

5. 모델 컴파일 하기
5-1. 컴파일 처리

손실함수
딥러닝의 예측값과 실제값 사이의 차이를 수치로 나타내는 함수
mse = 평균 제곱 오차 

최적화 함수
손실 함수의 값을 최소화하도록 가중치와 바이어스를 수정해 나가는 함수
adam

평가 지표
분류 모델이 얼마나 잘 분류했는지를 평가하는 지표
mae
