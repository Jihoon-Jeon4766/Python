while 반복문

break 키워드 : 반복의 종료
while True:
  수헹코드
  break
수행코드

continue 키워드 : 반복의 처음으로 이동
while True:
  수행코드
  continue
수행코드

for while 차이점
횟수 제어 & 조건 제어

횟수를 중요시하는 반복문은 for문을 사용하고,
특정 조건을 중요시 하는 반복문은 while을 사용함.

리스트[list]
리스트는 여러가지 자료를 저장할 수 있는 자료형
변수명 = [요소(element)]

리스트 선언
list_1 = [300,30,333,"문자열",True]
실행
print(list_1)

인덱스[index]
리스트이 특정 값에 접근하기 위한 방법
list_1 = [0] [1] [2] [3] [4]

슬라이싱
print(변수명[시작범위 : 끝범위 -1])

list_2 = [-5] [-4] [-3] [-2] [-1]

요소(element) 변경
요소 변경하는 방법
변수명[인덱스] = 변경할 요소

멤버 연산자
연산자
in   l in(1,2,3)  설명 : 왼쪽 피 연산자의 값이 오른쪽 피 연산자 멤버 중 일치하는 값이 존재 하면 True
not in  l not in(1,2,3) 설명 : 왼쪽 피 연산자의 값이 오른쪽 피 연산자 멤버중 일치하는 값이 존재 하지 않으면 True


리스트 [list] 함수
append(value)  설명 : 리스트 끝에 값을 추가
insert(idx, value) 설명 : 특정 인덱스 위치에 값을 추가
extend() 설명 : 리스트 끝에 여러 요소 추가
del 설명 : 특정 요소 삭제
pop() 설명 : 마지막 인덱스의 값을 반환 후 삭제
remove(value) 설명 : 특정 값에 해당하는 것을 찾아 삭제
clear() 설명 : 모든 값을 삭제하여 빈 리스트만 남김

리스트[list]요소 추가
append (), insert() 사용법
append() : 맨 뒤
리스트명.append(요소)

insert() : 중간
리스트명.insert(위치, 요소)


