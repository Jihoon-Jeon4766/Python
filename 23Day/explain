머신 러닝
데이터 입력 -> 특성 추출 -> 분류 -> 출력

딥러닝 
데이터 입력 -> 특성 추출 + 분류 -> 출력

뉴련(Neuron)
뇌와 신경계를 이루는 기본 단위의 신경 세포로, 정보를 받아들이고 처리한 뒤 다른 세포로 전달하는 역할

입력 신호 -> 신경 세포체 -> 핵 -< 축삭돌기(자극의 전달 방향) -> 출력 신호

퍼셉트론(Perceptron)
생물학적 뉴런을 흉내 내 만든 모델

x1 -> y
x2 -> y
z = w1x1 + w2x2+ b
y = f(z)
w = 가중치 
b= 바이어스(편향)


계산) x1 = 2.0   x2 = 3.0    w1 = 0.5  w2 = -0.4   b = 0.2
z = 0.5 * 2.0 + -0.4 * 3.0 + 0.2 
    1.0 + (-1.2) + 0.2
z = 0
y = f(z) 
z >= 0   y = 1
z <0   y = 0

입력 값 -> 입력층  -> 가중치(중간층) -> 출력층 -> 출력 값

하나의 층을 노드
묶여있는 것을 layer

작업순서
1. 문제정의
2. 데이터 불러오기
3. 데이터 탐색 및 전처리
4. 모델 생성
5. 모델 컴파일
6. 모델 학습
7. 모델 평가 및 예측

1-1. 문제 상황 이해하기
손글씨 숫자 분류

1-2. 문제 해결에 필요한 정보 살펴보기
필요 정보 1
활동에 필요한 데이터셋은 MNIST 데이터 셋이며, 케라스에서 다운로드

필요 정보 2
MNIST 데이터 셋은 학습에서 사용하기 위해 정규화 작업과 전처리 작업이 필요함

필요 정보 3
모델 생성에 필요한 활성함수는 렐루함수와 소프트맥스 함수를 사용.

2. 데이터 불러오기
MNIST(0부터 9까지의 손글씨 숫자로 이러우진 데이터셋)

텐서플로우(TensorFlow) : 구글이 개발한 딥러닝/머신러닝 오픈소스 라이브러리

케라스(Keras) : 딥러닝 모델을 쉽고 빠르게 만들 수 있도록 도와주는 API

2-2. MNIST 데이터 셋 불러오기
keras.datasets.데이터셋
(훈련 데이터, 훈련데이터 레이블),(테스트 데이터, 테스트 데이터 레이블) = 데이터 셋 객체.load_data()

4. 모델 생성하기
4-1. 모델 생성 방법
모델 객체 = keras.models.Sequential([keras.layers.Flatten(input_shape = [행 개수, 열 개수]), keras.layers.Dense(은닉층 노드의 개수, activation = '활성화 함수명'), ...
          keras.layers.Dense(출력층 노드의 개수, activation = '활성화 함수명')







